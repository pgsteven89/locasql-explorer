[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "localsql-explorer"
version = "0.1.0"
description = "A local desktop application for exploring and querying CSV, XLSX, and Parquet files using SQL"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Phillip Stevens", email = "phillip.stevens@example.com"}
]
maintainers = [
    {name = "Phillip Stevens", email = "phillip.stevens@example.com"}
]
keywords = ["sql", "csv", "excel", "parquet", "data", "analysis", "desktop", "duckdb"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Office/Business :: Financial :: Spreadsheet",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.10"
dependencies = [
    "duckdb>=0.9.0",
    "pandas>=2.0.0",
    "pyarrow>=10.0.0",
    "pydantic>=2.0.0",
    "sqlparse>=0.4.0",
    "openpyxl>=3.1.0",
    "PyQt6>=6.5.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-qt>=4.2.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/username/localsql-explorer"
Repository = "https://github.com/username/localsql-explorer"
Documentation = "https://localsql-explorer.readthedocs.io/"
"Bug Tracker" = "https://github.com/username/localsql-explorer/issues"

[project.scripts]
localsql-explorer = "localsql_explorer.main:main"
lsqlx = "localsql_explorer.main:main"

[project.gui-scripts]
localsql-explorer-gui = "localsql_explorer.main:gui_main"

[tool.setuptools]
packages = ["localsql_explorer"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
localsql_explorer = ["assets/*", "ui/assets/*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["localsql_explorer"]

# mypy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "PyQt6.*",
    "duckdb.*",
    "pandas.*",
    "pyarrow.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "ui: marks tests as UI tests requiring display",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]